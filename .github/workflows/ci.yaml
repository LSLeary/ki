name: CI

on:
  pull_request:
  push:
    branches: [master]

jobs:
  build:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        ghc: ["latest", "8.8", "8.6"]
        include:
          - os: macOS-latest
            ghc: "8.10.1"
          - os: windows-latest
            ghc: latest
    steps:
      - uses: actions/checkout@v2
        name: checkout
      - uses: actions/cache@v1
        name: cache ~/.ghcup/bin
        if: matrix.os == 'macOS-latest'
        with:
          path: ~/.ghcup/bin
          key: ${{ runner.os }}-${{ matrix.ghc }}-ghcup-bin
      - uses: actions/cache@v1
        name: cache ~/.ghcup/ghc
        if: matrix.os == 'macOS-latest'
        with:
          path: ~/.ghcup/ghc
          key: ${{ runner.os }}-${{ matrix.ghc }}-ghcup-ghc2
      - uses: actions/setup-haskell@v1.1
        id: setup-haskell
        name: setup
        with:
          ghc-version: ${{ matrix.ghc }}
      - uses: actions/cache@v1
        name: cache ~/.cabal/store
        with:
          path: ${{ steps.setup-haskell.outputs.cabal-store }}
          key: ${{ runner.os }}-${{ matrix.ghc }}-cabal-store-${{ hashFiles('**/*.cabal') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.ghc }}-cabal-store-
      - uses: actions/cache@v1
        name: cache dist-newstyle
        with:
          path: dist-newstyle
          key: ${{ runner.os }}-${{ matrix.ghc }}-dist-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.ghc }}-dist-
      - name: build ki
        run: ./do build ki
      - name: test ki
        run: ./do test ki
      - name: build ki-mtl
        run: ./do build ki-mtl
